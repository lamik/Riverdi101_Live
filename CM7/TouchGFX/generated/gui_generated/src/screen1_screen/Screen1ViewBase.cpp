/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 1280, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    imageBackground.setXY(0, 0);
    imageBackground.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));

    imageLogo.setBitmap(touchgfx::Bitmap(BITMAP_MSALAMON_PL_NOWE_TRANSPARENT_ID));
    imageLogo.setPosition(192, 0, 896, 208);
    imageLogo.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    buttonLedOn.setXY(555, 311);
    buttonLedOn.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonLedOn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_YAH7));
    buttonLedOn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonLedOn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonLedOn.setAction(buttonCallback);

    buttonLedOff.setXY(555, 449);
    buttonLedOff.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonLedOff.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HD2Q));
    buttonLedOff.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonLedOff.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonLedOff.setAction(buttonCallback);

    add(__background);
    add(imageBackground);
    add(imageLogo);
    add(buttonLedOn);
    add(buttonLedOff);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonLedOn)
    {
        //LedOnClicked
        //When buttonLedOn clicked call virtual function
        //Call LedOnClicked
        LedOnClicked();
    }
    else if (&src == &buttonLedOff)
    {
        //LedOffClicked
        //When buttonLedOff clicked call virtual function
        //Call LedOffClicked
        LedOffClicked();
    }
}
